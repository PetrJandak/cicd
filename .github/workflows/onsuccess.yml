name: on success

on:
  pull_request_target:
    types: [closed]

env:
  folder: petr002

jobs:
  on_success_job:
    runs-on: ubuntu-latest
    steps:
      - name: Hello
        uses: actions/checkout@v2
      - name: Do something when merged to main
        run: |
          touch creds
          git config --global credential.helper 'store --file creds'
          echo "https://${{secrets.GITHUB_TOKEN}}:x-oauth-basic@github.com" > creds
          export EDITOR=nano
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
        # Fetch all tags from the repo
          git fetch --tags
          
          # Extract the highest tag number (assuming tags are in the format "Release_v_X")
          latest_tag=$(git tag -l "Release_v_*" | sort -V | tail -n 1)
          
          # Extract the number from the tag (removing the "Release_v_" prefix)
          if [[ $latest_tag == "" ]]; then
          # If there are no tags matching the format, start from 1
          next_tag_num=1
          else
          current_num=${latest_tag#Release_v_}
          # Increment the number by 1
          next_tag_num=$((current_num + 1))
          fi
          
          # Create a new tag
          git tag "Release_v_$next_tag_num"
          
          # Push the new tag to the repository
          git push origin "Release_v_$next_tag_num"
          You can integrate this script into your GitHub Actions workflow. Ensure to have a checkout step and proper permissions (i.e., secrets.GH_TOKEN or secrets.GITHUB_TOKEN) to push tags to the repository.






